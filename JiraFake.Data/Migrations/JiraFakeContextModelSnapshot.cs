// <auto-generated />
using System;
using JiraFake.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JiraFake.Data.Migrations
{
    [DbContext(typeof(JiraFakeContext))]
    partial class JiraFakeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("JiraFake.Domain.Models.SubTarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid>("TarefaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tarefa_id");

                    b.HasKey("Id")
                        .HasName("pk_sub_tarefas");

                    b.HasIndex("TarefaId")
                        .HasDatabaseName("ix_sub_tarefas_tarefa_id");

                    b.ToTable("SubTarefas", (string)null);
                });

            modelBuilder.Entity("JiraFake.Domain.Models.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_tarefas");

                    b.ToTable("Tarefas", (string)null);
                });

            modelBuilder.Entity("JiraFake.Domain.Models.SubTarefa", b =>
                {
                    b.HasOne("JiraFake.Domain.Models.Tarefa", "Tarefa")
                        .WithMany("SubTarefas")
                        .HasForeignKey("TarefaId")
                        .IsRequired()
                        .HasConstraintName("fk_sub_tarefas_tarefas_tarefa_id");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("JiraFake.Domain.Models.Tarefa", b =>
                {
                    b.Navigation("SubTarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
